tempData <- getDayDataTable(date)
tempData <- tempData[c("Title","Spins")]
colnames(tempData)[2] <- as.character.Date(date)
mainData <- merge(mainData, tempData, by="Title")
}
date <- Sys.Date()
dateString <- as.character.Date(date)
mainData <- mainData[order(mainData[[dateString]], decreasing = TRUE),]
mainDataMatrix <- data.matrix(mainData[-1])
persp(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix, phi=40, theta=10)
library("plot3D")
persp3D(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix)
#size of matrix must be equal to x-by-y in persp function
library("rgl")s
persp3d(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix, col=rainbow(1000), xlab="Song Position", ylab="Time Ago in Days", zlab="Spins")
#browseURL(paste("file://", writeWebGL(dir=file.path("radio", "webGL"), width=700), sep=""))
#creates html file holding interactable 3d-plot
barplot(mainData[[dateString]], col=rainbow(50))
plot(mainData[[dateString]], col=rainbow(50))
plot(mainData[[dateString]], col=rainbow(50), type=l)
plot(mainData[[dateString]], col=rainbow(50), type="l")
plot(mainData[[dateString]], col=rainbow(50), type="o")
plot(mainData[[dateString]], col=rainbow(50), type="o")
head(mainData)
dateString
rm(list=ls())
library("rvest")
TOTALDAYS <- 3
getDayDataTable <- function(date) {
dateString <- gsub("-","",as.character.Date(date))
url <- paste("http://kworb.net/radio/pop/archives/",dateString,".html", sep="")
dayDataTable <- url %>% read_html() %>% html_nodes(xpath="/html/body/table") %>% html_table()
dayDataTable <- dayDataTable[[1]]
return(dayDataTable)
}
date <- Sys.Date()
mainData <- getDayDataTable(date)
keeps <- c("Title", "Spins")
mainData <- mainData[keeps]
colnames(mainData)[2] <- as.character.Date(date)
for(i in 2:TOTALDAYS) {
date <- date-1
tempData <- getDayDataTable(date)
tempData <- tempData[c("Title","Spins")]
colnames(tempData)[2] <- as.character.Date(date)
mainData <- merge(mainData, tempData, by="Title")
}
mainData <- mainData[order(mainData[[2]], decreasing = TRUE),]
mainDataMatrix <- data.matrix(mainData[-1])
persp(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix, phi=40, theta=10)
library("plot3D")
persp3D(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix)
#size of matrix must be equal to x-by-y in persp function
library("rgl")
persp3d(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix, col=rainbow(1000), xlab="Song Position", ylab="Time Ago in Days", zlab="Spins")
#browseURL(paste("file://", writeWebGL(dir=file.path("radio", "webGL"), width=700), sep=""))
#creates html file holding interactable 3d-plot
barplot(mainData[[2]], col=rainbow(50))
head(mainData)
persp3D(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainData[2:31]) #mainDataMatrix)
persp3D(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainData[[2:31]]) #mainDataMatrix)
persp3D(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainData[[2:31,]]) #mainDataMatrix)
persp3D(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainData[[x]]) #mainDataMatrix)
x <- 2:31
persp3D(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainData[[x]]) #mainDataMatrix)
?persp3D
persp3D(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix)
rm(tempData)
mainData <- mainData[order(mainData[[2]], decreasing = TRUE),]
mainData <- mainData[order(mainData[2], decreasing = TRUE),]
head(mainData)
mainData <- mainData[order(mainData[2], decreasing = FALSE),]
head(mainData)
mainData <- mainData[order(mainData[2], decreasing = TRUE),]
head(mainData)
barplot(mainData[[2]], col=rainbow(50))
barplot(mainData[2], col=rainbow(50))
class(mainData[2])
?order
rm(list=ls())
library("rvest")
TOTALDAYS <- 3
getDayDataTable <- function(date) {
dateString <- gsub("-","",as.character.Date(date))
url <- paste("http://kworb.net/radio/pop/archives/",dateString,".html", sep="")
dayDataTable <- url %>% read_html() %>% html_nodes(xpath="/html/body/table") %>% html_table()
dayDataTable <- dayDataTable[1]
return(dayDataTable)
}
date <- Sys.Date()
mainData <- getDayDataTable(date)
keeps <- c("Title", "Spins")
mainData <- mainData[keeps]
colnames(mainData)[2] <- as.character.Date(date)
for(i in 2:TOTALDAYS) {
date <- date-1
tempData <- getDayDataTable(date)
tempData <- tempData[c("Title","Spins")]
colnames(tempData)[2] <- as.character.Date(date)
mainData <- merge(mainData, tempData, by="Title")
}
head(tempData)
getDayDataTable <- function(date) {
dateString <- gsub("-","",as.character.Date(date))
url <- paste("http://kworb.net/radio/pop/archives/",dateString,".html", sep="")
dayDataTable <- url %>% read_html() %>% html_nodes(xpath="/html/body/table") %>% html_table()
dayDataTable <- dayDataTable[[1]]
return(dayDataTable)
}
date <- Sys.Date()
mainData <- getDayDataTable(date)
keeps <- c("Title", "Spins")
mainData <- mainData[keeps]
colnames(mainData)[2] <- as.character.Date(date)
for(i in 2:TOTALDAYS) {
date <- date-1
tempData <- getDayDataTable(date)
tempData <- tempData[c("Title","Spins")]
colnames(tempData)[2] <- as.character.Date(date)
mainData <- merge(mainData, tempData, by="Title")
}
barplot(mainData[[2]], col=rainbow(50))
head(mainData)
mainData <- mainData[order(mainData[2], decreasing = TRUE),]
head(mainData)
mainData <- mainData[order(mainData[2], decreasing = TRUE),]
barplot(mainData[[2]], col=rainbow(50))
mainData <- mainData[[order(mainData[2], decreasing = TRUE),]]
mainData <- mainData[order(mainData[2], decreasing = TRUE),]
head(mainData)
tail(mainData)
mainData
rm(list=ls())
library("rvest")
TOTALDAYS <- 3
getDayDataTable <- function(date) {
dateString <- gsub("-","",as.character.Date(date))
url <- paste("http://kworb.net/radio/pop/archives/",dateString,".html", sep="")
dayDataTable <- url %>% read_html() %>% html_nodes(xpath="/html/body/table") %>% html_table()
dayDataTable <- dayDataTable[[1]]
return(dayDataTable)
}
date <- Sys.Date()
mainData <- getDayDataTable(date)
mainData <- mainData[c("Title","Spins")]
colnames(mainData)["Spins"] <- as.character.Date(date)
for(i in 2:TOTALDAYS) {
date <- date-1
tempData <- getDayDataTable(date)
tempData <- tempData[c("Title","Spins")]
?colnames
1:10
10:1
library("rvest")
TOTALDAYS <- 3
getDayDataTable <- function(date) {
dateString <- gsub("-","",as.character.Date(date))
url <- paste("http://kworb.net/radio/pop/archives/",dateString,".html", sep="")
dayDataTable <- url %>% read_html() %>% html_nodes(xpath="/html/body/table") %>% html_table()
dayDataTable <- dayDataTable[[1]]
return(dayDataTable)
}
date <- Sys.Date()
mainData <- getDayDataTable(date)
mainData <- mainData[c("Title","Spins")]
colnames(mainData)[2] <- as.character.Date(date)
for(i in 2:TOTALDAYS) {
date <- date-1
tempData <- getDayDataTable(date)
tempData <- tempData[c("Title","Spins")]
colnames(tempData)[2] <- as.character.Date(date)
mainData <- merge(mainData, tempData, by="Title")
}
rm(tempData)
mainData <- mainData[order(mainData[2], decreasing = TRUE),]
mainDataMatrix <- data.matrix(mainData[-1])
persp(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix, phi=40, theta=10)
library("plot3D")
persp3D(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix)
#size of matrix must be equal to x-by-y in persp function
library("rgl")
persp3d(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix, col=rainbow(1000), xlab="Song Position", ylab="Time Ago in Days", zlab="Spins")
#browseURL(paste("file://", writeWebGL(dir=file.path("radio", "webGL"), width=700), sep=""))
#creates html file holding interactable 3d-plot
barplot(mainData[[2]], col=rainbow(50))
library(data.table)
setcolorder(mainData, c("Title",(TOTALDAYS+1):2))
x <- mainData[,c("Title",(TOTALDAYS+1):2)]
x <- mainData[,c("Title",(TOTALDAYS):2)]
x <- mainData[,c("Title",(TOTALDAYS+1):2)]
(TOTALDAYS+1):2
c("Title",(TOTALDAYS+1):2)
x <- c("Title",(TOTALDAYS+1):2)
x[1]
x[2]
x[3]
?plot
?setcolorder
head(mainData)
setcolorder(mainData, (TOTALDAYS+1):1)
head(mainData)
setcolorder(mainData, (TOTALDAYS+1):1)
head(mainData)
setcolorder(mainData, c("Title",(TOTALDAYS+1):1)
setcolorder(mainData, c("Title",(TOTALDAYS+1):1))
setcolorder(mainData, c("Title",(TOTALDAYS+1):2))
head(mainData)
setcolorder(mainData[2:(TOTALDAYS+1)], TOTALDAYS:1)
head(mainData)
head(mainData[2:TOTALDAYS+1])
head(mainData[2:TOTALDAYS])
head(mainData)
setcolorder(mainData[2:(TOTALDAYS)])
head(mainData)
setcolorder(mainData[2:(TOTALDAYS+1)], (TOTALDAYS):1)
head(mainData)
head(mainData[2:(TOTALDAYS+1)])
x <- setcolorder(mainData[2:(TOTALDAYS+1)], (TOTALDAYS):1)
x
head(x)
setcolorder(mainData[2:(TOTALDAYS+1)], (TOTALDAYS):1)
head(mainData)
mainData[0]
mainData[[0]]
names(mainData)
head(mainData)
setcolorder(mainData, c("Title", -names(mainData[2:(TOTALDAYS+1)])))
setcolorder(mainData, c("Title", names(mainData[(TOTALDAYS+1):2])))
head(mainData)
setcolorder(mainData, c("Title", names(mainData[(TOTALDAYS+1):2])))
head(mainData)
setcolorder(mainData, c("Title", names(mainData[(TOTALDAYS+1):2])))
head(mainData)
plot(mainData[2])
plot(mainData[[2])
plot(mainData[[2]])
mainData[[2]]
mainData[2]
mainData[,2]
mainData[[,2]
]
mainData[[,2]]
mainData[[,2]]
mainData[2]
mainData[[2]]
mainData[,2]
mainData[[,2]]
mainData[2]
mainData[2,]
mainData[1,]
mainData[1,2:(TOTALDAYS+1)]
plot(mainData[1,2:(TOTALDAYS+1)])
mainData[[1,2:(TOTALDAYS+1)]]
mainData[[1,]]
mainData[[1,2]]
mainData[[1,(2:4)]]
mainData[[1,(2:3)]]
mainData[[1,c(2,3)]]
mainData[[1,c(2,4)]]
head(mainData)
mainData[1,c(2,4)]
mainData[1,c(2,(TOTALDAYS+1))]
mainData[1,2:(TOTALDAYS+1)]
plot(mainData[1,2:(TOTALDAYS+1)])
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]))
plot(mainData[[2]])
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]))
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type=l)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l")
?plot
as.numeric(mainData[1,2:(TOTALDAYS+1)])
plot(mainData[1,2:(TOTALDAYS+1)], type="l")
plot(mainData[1,2:(TOTALDAYS+1)])
mainData[1,2:(TOTALDAYS+1)]
levels(mainData)
colnames(mainData)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l")
?axis
axis(1, labels=colnames(mainData[2:(TOTALDAYS+1)]))
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]))
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), tick=FALSE)
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), tick=TRUE)
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), tick=FALSE)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), tick=FALSE)
?plot
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE)
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), tick=FALSE)
?plot
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=yaxt)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes="yaxt")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", tick=FALSE)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE)
axis(2, at=x,labels=x, col.axis="red", las=2)
axis(2, at=1:TOTALDAYS,labels=mainDATA[2:(TOTALDAYS+1)], col.axis="red", las=2)
axis(2, at=1:TOTALDAYS,labels=mainData[2:(TOTALDAYS+1)], col.axis="red", las=2)
axis(2, at=1:TOTALDAYS,labels=mainData[2:(TOTALDAYS+1)], las=2)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE)
axis(2, at=1:TOTALDAYS,labels=mainData[2:(TOTALDAYS+1)], las=2)
axis(1, labels=colnames(mainData[2:(TOTALDAYS+1)]))
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), tick=FALSE)
axis(2, at=1:TOTALDAYS,labels=mainData[2:(TOTALDAYS+1)], las=2)
axis(2, at=1:TOTALDAYS,labels=col(mainData[2:(TOTALDAYS+1)]), las=2)
axis(2, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=2)
axis(2, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=0)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
axis(2, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=0)
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=0)
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]))
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]))
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=0)
axis(2, at=seq(0,mainData[2,1],500), las=0)
mainData[2,1]
mainData[1,2]
axis(2, at=seq(0,mainData[1,2],500), las=0)
axis(2, at=seq(0,mainData[1,2],500), las=2)
axis(1, at=seq(0,mainData[1,2],500), las=2)
axis(1, at=seq(0,mainData[1,2],500), las=0)
axis(2, at=seq(0,mainData[1,2],500), las=2)
axis(2, at=seq(0,mainData[1,2],500), las=2)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", xlab="Date", ylab="Spins")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=0)
axis(2, at=seq(0,mainData[1,2],500), las=2)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
axis(2, at=seq(0,mainData[1,2],500), las=2)
seq(0,mainData[1,2],500)
axis(2, at=seq(0,mainData[1,2],500), las=0)
axis(2, at=seq(0,1000,100), labels=seq(0,1000,100), las=0)
axis(2, at=seq(0,1000,100), labels=seq(0,1000,100), las=1)
axis(2, at=seq(0,1000,100), labels=seq(0,1000,100), las=2)
axis(2, at=seq(0,1000,100), labels=seq(0,1000,100), las=3)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
axis(2, at=seq(0,1000,100), labels=seq(0,1000,100), las=0)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
> axis(2, at=seq(0,1000,100), labels=seq(0,1000,100), las=1)
axis(2, at=seq(0,1000,100), labels=seq(0,1000,100), las=1)
axis(2, at=seq(0,1000,100), labels=seq(0,1000,100), las=0)
axis(3, at=seq(0,1000,100), labels=seq(0,1000,100), las=0)
axis(4, at=seq(0,1000,100), labels=seq(0,1000,100), las=0)
axis(2, at=seq(0,1000,100), labels=seq(0,1000,100), las=2)
axis(4, at=seq(0,1000,100), labels=seq(0,1000,100), las=2)
axis(3, at=seq(0,1000,100), labels=seq(0,1000,100), las=2)
axis(3, at=seq(0,1000,100), labels=seq(0,1000,100), las=0)
axis(2, at=seq(0,1000,100), labels=seq(0,1000,100), las=2)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", yaxt="n", xlab="Date", ylab="Spins")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", xaxt="n", xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=0)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
axis(2, at=seq(0,mainData[1,2],500), las=2)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=0)
axis(2, at=seq(0,mainData[1,2],100), las=2)
axis(2, at=seq(0,mainData[1,2],100),labels=seq(0,mainData[1,2],100), las=2)
axis(2, at=seq(0,mainData[1,2],100),labels=seq(0,mainData[1,2],100), las=2)
axis(2, at=seq(0,mainData[1,2],100),labels=1:20, las=2)
axis(2, at=seq(0,mainData[1,2],100),labels=1:155, las=2)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
axis(2, at=seq(0,mainData[1,2],100),labels=1:155, las=2)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", axes=FALSE, xlab="Date", ylab="Spins")
axis(2, at=seq(0,mainData[1,2],100),labels=1:155, las=2)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", xlab="Date", ylab="Spins")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", xaxt="n", xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=0)
TOTALDAYS <- 5
library("rvest")
getDayDataTable <- function(date) {
dateString <- gsub("-","",as.character.Date(date))
url <- paste("http://kworb.net/radio/pop/archives/",dateString,".html", sep="")
dayDataTable <- url %>% read_html() %>% html_nodes(xpath="/html/body/table") %>% html_table()
dayDataTable <- dayDataTable[[1]]
return(dayDataTable)
}
date <- Sys.Date()
mainData <- getDayDataTable(date)
mainData <- mainData[c("Title","Spins")]
colnames(mainData)[2] <- format(date, format="%m-%d")
for(i in 2:TOTALDAYS) {
date <- date-1
tempData <- getDayDataTable(date)
tempData <- tempData[c("Title","Spins")]
colnames(tempData)[2] <- format(date, format="%m-%d")
mainData <- merge(mainData, tempData, by="Title")
}
rm(tempData)
mainData <- mainData[order(mainData[2], decreasing = TRUE),]
mainDataMatrix <- data.matrix(mainData[-1])
persp(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix, phi=40, theta=10)
library("plot3D")
persp3D(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix)
#size of matrix must be equal to x-by-y in persp function
library("rgl")
persp3d(x = 1:nrow(mainData), y = 1:TOTALDAYS, z = mainDataMatrix, col=rainbow(1000), xlab="Song Position", ylab="Time Ago in Days", zlab="Spins")
#browseURL(paste("file://", writeWebGL(dir=file.path("radio", "webGL"), width=700), sep=""))
#creates html file holding interactable 3d-plot
barplot(mainData[[2]], col=rainbow(50))
library(data.table)
setcolorder(mainData, c("Title", names(mainData[(TOTALDAYS+1):2])))
#reverses the order of the date columns
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", xlab="Date", ylab="Spins")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="o", xaxt="n", xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=2)
lines(as.numeric(mainData[2,2:(TOTALDAYS+1)]))
lines(as.numeric(mainData[2,2:(TOTALDAYS+1)]), type="o")
head(mainData)
mainData[Pillowtalk]
mainData["Pillowtalk"]
mainData["Pillowtalk",]
mainData[["Pillowtalk",]]
mainData[["Pillowtalk"]]
mainData[["Pillowtadedelk"]]
mainData["Pillowtk",]
mainData["Pillowtalk",]
mainData["Pillowtalk"]
mainData["Pillowtalk",1]
mainData["Pillowtalk",2]
mainData[="Pillowtalk",2]
mainData[="Pillowtalk"]
mainData$Title == "Pillowtalk"
mainData[mainData$Title == "Pillowtalk"]
mainData[[mainData$Title == "Pillowtalk"]]
mainData[[mainData$Title == "Pillowtalk",]]
mainData[mainData$Title == "Pillowtalk",]
head(mainData)
plotSong("7 years")
plotSong <- function(title) {
lines(as.numeric(mainData[mainData$Title == title,2:(TOTALDAYS+1)]))
}
plotSong("7 years")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="o", xaxt="n", xlab="Date", ylab="Spins")
plotSong("7 years")
plotSong <- function(title) {
return(lines(as.numeric(mainData[mainData$Title == title,2:(TOTALDAYS+1)])))
}
head(mainData)
plotSong("7 years")
plotSong("7 Years")
title <- "7 Years"
lines(as.numeric(mainData[mainData$Title == title,2:(TOTALDAYS+1)]))
title <- "Cake By the Ocean"
plotSong(title)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="o", xaxt="n", xlab="Date", ylab="Spins")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="l", xlab="Date", ylab="Spins")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="o", xaxt="n", xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=2)
lines(as.numeric(mainData[2,2:(TOTALDAYS+1)]), type="o")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="o", xaxt="n", xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=2)
title <- "7 Years"
lines(as.numeric(mainData[mainData$Title == title,2:(TOTALDAYS+1)]))
mainData[mainData$Title == title]
mainData[mainData$Title == title,2]
mainData[mainData$Title == title,2:(TOTALDAYS+1)]
title
head(mainData)
title <- "Cake By The Ocean"
plotSong(title = )
plotSong(title)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="o", xaxt="n", xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=2)
lines(as.numeric(mainData[2,2:(TOTALDAYS+1)]), type="o")
plotSong <- function(title) {
lines(as.numeric(mainData[mainData$Title == title,2:(TOTALDAYS+1)]), type="o")
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="o", xaxt="n", xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=2)
plot(as.numeric(mainData[1,2:(TOTALDAYS+1)]), type="o", xaxt="n", xlab="Date", ylab="Spins")
axis(1, at=1:TOTALDAYS,labels=colnames(mainData[2:(TOTALDAYS+1)]), las=2)
plotSong <- function(title) {
lines(as.numeric(mainData[mainData$Title == title,2:(TOTALDAYS+1)]), type="o")
}
head(mainData)
plotSong("Cake By The Ocean")
TOTALDAYS <- 30
library("rvest")
getDayDataTable <- function(date) {
dateString <- gsub("-","",as.character.Date(date))
url <- paste("http://kworb.net/radio/pop/archives/",dateString,".html", sep="")
dayDataTable <- url %>% read_html() %>% html_nodes(xpath="/html/body/table") %>% html_table()
dayDataTable <- dayDataTable[[1]]
return(dayDataTable)
}
setwd("radio-data")
getwd
getwd()
dataToCSV <- function(date) {
temp <- getDayDataTable(date)
write.csv(temp, file=paste(date,".csv",sep=""))
}
updateDataCSV <- function() {
date <- Sys.Date()
while(TRUE) {
if(file.exists(paste(date,".csv",sep=""))) {
break
}
else {
dataToCSV(date)
}
date <- date-1
}
}
updateDataCSV()
